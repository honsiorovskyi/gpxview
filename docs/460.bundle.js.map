{"version":3,"file":"460.bundle.js","mappings":"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","sources":["webpack://gpx-viewer/./node_modules/@raruto/leaflet-elevation/libs/leaflet-gpxgroup.js"],"sourcesContent":["/*\n * https://github.com/adoroszlai/joebed/tree/gh-pages\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014- Doroszlai Attila, 2019- Raruto\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nL.Mixin.Selectable = {\n  includes: L.Mixin.Events,\n\n  setSelected: function(s) {\n    var selected = !!s;\n    if (this._selected !== selected) {\n      this._selected = selected;\n      this.fire('selected');\n    }\n  },\n\n  isSelected: function() {\n    return !!this._selected;\n  },\n};\n\nL.Mixin.Selection = {\n  includes: L.Mixin.Events,\n\n  getSelection: function() {\n    return this._selected;\n  },\n\n  setSelection: function(item) {\n    if (this._selected === item) {\n      if (item !== null) {\n        item.setSelected(!item.isSelected());\n        if (!item.isSelected()) {\n          this._selected = null;\n        }\n      }\n    } else {\n      if (this._selected) {\n        this._selected.setSelected(false);\n      }\n      this._selected = item;\n      if (this._selected) {\n        this._selected.setSelected(true);\n      }\n    }\n    this.fire('selection_changed');\n  },\n};\n\nL.Control.LayersLegend = L.Control.Layers.extend({\n  _onInputClick: function() {\n    this._handlingClick = true;\n\n    this._layerControlInputs.reduceRight((_,input) => {\n      if (input.checked) {\n        this._map.fireEvent(\"legend_selected\", {\n          layer: this._getLayer(input.layerId).layer,\n          input: input,\n        }, true);\n      return input;\n     }\n    }, 0);\n\n    this._handlingClick = false;\n\n    this._refocusOnMap();\n  }\n});\n\nL.control.layersLegend = (baseLayers, overlays, options) => new L.Control.LayersLegend(baseLayers, overlays, options);\n\nL.GeoJSON.include(L.Mixin.Selectable);\n\nL.GpxGroup = L.Class.extend({\n  options: {\n    highlight: {\n      color: '#ff0',\n      opacity: 1,\n    },\n    points: [],\n    points_options: {\n      icon: {\n        iconUrl: '../images/elevation-poi.png',\n        iconSize: [12, 12],\n      }\n    },\n    flyToBounds: true,\n    legend: false,\n    legend_options: {\n      position: \"topright\",\n      collapsed: false,\n    },\n    elevation: true,\n    elevation_options: {\n      theme: 'yellow-theme',\n      detached: true,\n      elevationDiv: '#elevation-div',\n    },\n    distanceMarkers: true,\n    distanceMarkers_options: {\n      lazy: true\n    },\n  },\n\n  initialize: function(tracks, options) {\n\n    L.Util.setOptions(this, options);\n\n    this._count       = 0;\n    this._loadedCount = 0;\n    this._tracks      = tracks;\n    this._layers      = L.featureGroup();\n    this._markers     = L.featureGroup();\n    this._elevation   = L.control.elevation(this.options.elevation_options);\n    this._legend      = L.control.layersLegend(null, null, this.options.legend_options);\n\n    this.options.points.forEach((poi) => \n      L\n        .marker(poi.latlng, { icon: L.icon(this.options.points_options.icon) })\n        .bindTooltip(poi.name, { direction: 'auto' }).addTo(this._markers)\n    );\n\n  },\n\n  getBounds: function() {\n    return this._layers.getBounds();\n  },\n\n  addTo: function(map) {\n    this._layers.addTo(map);\n    this._markers.addTo(map);\n\n    this._map = map;\n\n    this.on('selection_changed', this._onSelectionChanged, this);\n    this._map.on('legend_selected', this._onLegendSelected, this);\n    this._tracks.forEach(this.addTrack, this);\n\n  },\n\n  addTrack: function(track) {\n    if (track instanceof Object) {\n      this._loadGeoJSON(track);\n    } else {\n      fetch(track)\n        .then(response => response.ok && response.text())\n        .then(text => this._elevation._parseFromString(text))\n        .then(geojson => this._loadGeoJSON(geojson, track.split('/').pop().split('#')[0].split('?')[0]));\n    }\n  },\n\n  _loadGeoJSON: function(geojson, fallbackName) {\n    if (geojson) {\n      geojson.name = geojson.name || (geojson[0] && geojson[0].properties.name) || fallbackName;\n      this._loadRoute(geojson);\n    }\n  },\n\n  _loadRoute: function(data) {\n    if (!data) return;\n\n    var line_style = {\n      color: this._uniqueColors(this._tracks.length)[this._count++],\n      opacity: 0.75,\n      weight: 5,\n      distanceMarkers: this.options.distanceMarkers_options,\n    };\n\n    var route = L.geoJson(data, {\n      name: data.name || '',\n      style: (feature) => line_style,\n      distanceMarkers: line_style.distanceMarkers,\n      originalStyle: line_style,\n      filter: feature => feature.geometry.type != \"Point\",\n    });\n\n    \n    this._elevation.import(this._elevation.__LGEOMUTIL).then(() => {\n      route.addTo(this._layers);\n\n      route.eachLayer((layer) => this._onEachRouteLayer(route, layer));\n      this._onEachRouteLoaded(route);\n    });\n\n  },\n\n  _onEachRouteLayer: function(route, layer) {\n    var polyline = layer;\n\n    route.on('selected', L.bind(this._onRouteSelected, this, route, polyline));\n\n    polyline.on('mouseover', L.bind(this._onRouteMouseOver, this, route, polyline));\n    polyline.on('mouseout', L.bind(this._onRouteMouseOut, this, route, polyline));\n    polyline.on('click', L.bind(this._onRouteClick, this, route, polyline));\n\n    polyline.bindTooltip(route.options.name, { direction: 'auto', sticky: true, });\n  },\n\n  _onEachRouteLoaded: function(route) {\n    if (this.options.legend) {\n      this._legend.addBaseLayer(route, '<svg id=\"legend_' + route._leaflet_id + '\" width=\"25\" height=\"10\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">' + '<line x1=\"0\" x2=\"50\" y1=\"5\" y2=\"5\" stroke=\"' + route.options.originalStyle.color + '\" fill=\"transparent\" stroke-width=\"5\" /></svg>' + ' ' + route.options.name);\n    }\n    \n    this.fire('route_loaded', { route: route });\n\n    if (++this._loadedCount === this._tracks.length) {\n      this.fire('loaded');\n      if (this.options.flyToBounds) {\n        this._map.flyToBounds(this.getBounds(), { duration: 0.25, easeLinearity: 0.25, noMoveStart: true });\n      }\n      if (this.options.legend) {\n        this._legend.addTo(this._map);\n      }\n    }\n  },\n\n  highlight: function(route, polyline) {\n    polyline.setStyle(this.options.highlight);\n    if (this.options.distanceMarkers) {\n      polyline.addDistanceMarkers();\n    }\n  },\n\n  unhighlight: function(route, polyline) {\n    polyline.setStyle(route.options.originalStyle);\n    if (this.options.distanceMarkers) {\n      polyline.removeDistanceMarkers();\n    }\n  },\n\n  _onRouteMouseOver: function(route, polyline) {\n    if (!route.isSelected()) {\n      this.highlight(route, polyline);\n      if (this.options.legend) {\n        this.setSelection(route);\n        L.DomUtil.get('legend_' + route._leaflet_id).parentNode.previousSibling.click();\n      }\n    }\n    this.fire('route_mouseover', { route: route, polyline: polyline });\n  },\n\n  _onRouteMouseOut: function(route, polyline) {\n    if (!route.isSelected()) {\n      this.unhighlight(route, polyline);\n    }\n    this.fire('route_mouseout', { route: route, polyline: polyline });\n  },\n\n  _onRouteClick: function(route, polyline) {\n    this.setSelection(route);\n  },\n\n  _onRouteSelected: function(route, polyline) {\n    if (!route.isSelected()) {\n      this.unhighlight(route, polyline);\n    }\n  },\n\n  _onSelectionChanged: function(e) {\n    var elevation = this._elevation;\n    var eleDiv = elevation.getContainer();\n    var route = this.getSelection();\n\n    elevation.clear();\n\n    if (route && route.isSelected()) {\n      if (!eleDiv) {\n        elevation.addTo(this._map);\n      }\n      route.getLayers().forEach(function(layer) {\n        if (layer instanceof L.Polyline) {\n          elevation.addData(layer, false);\n          layer.bringToFront();\n        }\n      });\n    } else {\n      if (eleDiv) {\n        elevation.remove();\n      }\n    }\n  },\n\n  _onLegendSelected: function(e) {\n    var parent = e.input.closest('.leaflet-control-layers-list');\n    var route = e.layer;\n\n    if (!route.isSelected()) {\n      this.setSelection(route);\n      for (var i in route._layers) {\n        this.highlight(route, route._layers[i]);\n      }\n      this._map.flyToBounds(e.layer.getBounds());\n    }\n\n    parent.scroll({ top: (e.input.offsetTop - parent.offsetTop) || 0, behavior: 'smooth' });\n\n    this._layers.eachLayer(layer => {\n      var legend = L.DomUtil.get('legend_' + layer._leaflet_id);\n      legend.querySelector(\"line\").style.stroke = layer.isSelected() ? this.options.highlight.color : \"\";\n      legend.parentNode.style.fontWeight = layer.isSelected() ? \"700\" : \"\";\n    });\n  },\n\n  _uniqueColors: function(count) {\n    return count === 1 ? ['#0000ff'] : new Array(count).fill(null).map((_,i) => this._hsvToHex(i * (1 / count), 1, 0.7));\n  },\n\n  _hsvToHex: function(h, s, v) {\n    var i = Math.floor(h * 6);\n    var f = h * 6 - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n    var rgb = { 0: [v, t, p], 1: [q, v, p], 2: [p, v, t], 3: [p, q, v], 4: [t, p, v], 5: [v, p, q] }[i % 6];\n    return rgb.map(d => d * 255).reduce((hex, byte) => hex + ((byte >> 4) & 0x0F).toString(16) + (byte & 0x0F).toString(16), \"#\");\n  },\n\n  removeFrom: function(map) {\n    this._layers.removeFrom(map);\n  },\n\n});\n\nL.GpxGroup.include(L.Mixin.Events);\nL.GpxGroup.include(L.Mixin.Selection);\n\nL.gpxGroup = (tracks, options) => new L.GpxGroup(tracks, options);"],"names":["L","Mixin","Selectable","includes","Events","setSelected","s","selected","this","_selected","fire","isSelected","Selection","getSelection","setSelection","item","Control","LayersLegend","Layers","extend","_onInputClick","_handlingClick","_layerControlInputs","reduceRight","_","input","checked","_map","fireEvent","layer","_getLayer","layerId","_refocusOnMap","control","layersLegend","baseLayers","overlays","options","GeoJSON","include","GpxGroup","Class","highlight","color","opacity","points","points_options","icon","iconUrl","iconSize","flyToBounds","legend","legend_options","position","collapsed","elevation","elevation_options","theme","detached","elevationDiv","distanceMarkers","distanceMarkers_options","lazy","initialize","tracks","Util","setOptions","_count","_loadedCount","_tracks","_layers","featureGroup","_markers","_elevation","_legend","forEach","poi","marker","latlng","bindTooltip","name","direction","addTo","getBounds","map","on","_onSelectionChanged","_onLegendSelected","addTrack","track","Object","_loadGeoJSON","fetch","then","response","ok","text","_parseFromString","geojson","split","pop","fallbackName","properties","_loadRoute","data","line_style","_uniqueColors","length","weight","route","geoJson","style","feature","originalStyle","filter","geometry","type","import","__LGEOMUTIL","eachLayer","_onEachRouteLayer","_onEachRouteLoaded","polyline","bind","_onRouteSelected","_onRouteMouseOver","_onRouteMouseOut","_onRouteClick","sticky","addBaseLayer","_leaflet_id","duration","easeLinearity","noMoveStart","setStyle","addDistanceMarkers","unhighlight","removeDistanceMarkers","DomUtil","get","parentNode","previousSibling","click","e","eleDiv","getContainer","clear","getLayers","Polyline","addData","bringToFront","remove","parent","closest","i","scroll","top","offsetTop","behavior","querySelector","stroke","fontWeight","count","Array","fill","_hsvToHex","h","v","Math","floor","f","p","q","t","d","reduce","hex","byte","toString","removeFrom","gpxGroup"],"sourceRoot":""}