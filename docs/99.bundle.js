"use strict";(self.webpackChunkgpx_viewer=self.webpackChunkgpx_viewer||[]).push([[99],{99:(e,t,s)=>{function a(){const e=L.Control.Elevation.Utils;let t=this.options,s={};return s.label=t.speedLabel||L._(t.imperial?"mph":"km/h"),t.speedFactor=t.speedFactor||1,{name:"speed",required:this.options.acceleration,unit:s.label,deltaMax:this.options.speedDeltaMax,clampRange:this.options.speedRange,decimals:2,pointToAttr:(e,s)=>{let a=1e3*(this._data[s].dist-this._data[s>0?s-1:s].dist),i=this._data[s].time-this._data[s>0?s-1:s].time;return i>0?Math.abs(a/i*t.timeFactor)*t.speedFactor:NaN},stats:{max:e.iMax,min:e.iMin,avg:e.iAvg},scale:this.options.speed&&"summary"!=this.options.speed&&{axis:"y",position:"right",scale:{min:0,max:1},tickPadding:16,labelX:25,labelY:-8},path:this.options.speed&&"summary"!=this.options.speed&&{label:"Speed",yAttr:"speed",scaleX:"distance",scaleY:"speed",color:"#03ffff",strokeColor:"#000",strokeOpacity:"0.5",fillOpacity:"0.25"},tooltip:this.options.speed&&{chart:e=>L._("v: ")+e.speed+" "+s.label,marker:e=>Math.round(e.speed)+" "+s.label,order:50},summary:this.options.speed&&{minspeed:{label:"Min Speed: ",value:(e,t)=>Math.round(e.speed_min||0)+"&nbsp;"+t,order:51},maxspeed:{label:"Max Speed: ",value:(e,t)=>Math.round(e.speed_max||0)+"&nbsp;"+t,order:51},avgspeed:{label:"Avg Speed: ",value:(e,t)=>Math.round(e.speed_avg||0)+"&nbsp;"+t,order:52}}}}s.r(t),s.d(t,{Speed:()=>a})}}]);
//# sourceMappingURL=99.bundle.js.map