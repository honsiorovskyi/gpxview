{"version":3,"file":"530.bundle.js","mappings":"6GAsCAA,EAAEC,eAAiBD,EAAEE,aAAaC,OAAO,CACxCC,YAAa,WACZ,IAAIC,EAAMC,KAAKC,UAAUC,KACrBC,EAAIH,KAAKI,OAWb,GARAJ,KAAKK,QAAQC,SAAWN,KAAKK,QAAQC,UAAY,EAG7CN,KAAKK,QAAQE,QAAUP,KAAKC,UAAUO,eACzCR,KAAKC,UAAUO,cAAcR,MAI1BA,KAAKK,QAAQI,MAAQT,KAAKK,QAAQI,KAAKC,IAC1C,GAAKV,KAAKK,QAAQI,KAAKE,QAQhB,CACN,MAAMF,EAAOT,KAAKK,QAAQI,KAC1B,IAAIG,EAAKT,EAAEU,EAAIJ,EAAKK,OAAOD,EACvBE,EAAKZ,EAAEa,EAAIP,EAAKK,OAAOE,EAC3BjB,EAAIkB,OACAR,EAAKS,SACRnB,EAAIoB,UAAUhB,EAAEU,EAAGV,EAAEa,GACrBjB,EAAImB,OAAOT,EAAKS,QAChBN,EAAK,EACLG,EAAK,GAENhB,EAAIqB,UAAUX,EAAKE,QAASC,EAAKH,EAAKY,KAAK,GAAK,EAAGN,EAAKN,EAAKY,KAAK,GAAK,EAAGZ,EAAKY,KAAK,GAAIZ,EAAKY,KAAK,IAClGtB,EAAIuB,SACL,KArBgC,CAC/B,MAAMb,EAAOc,SAASC,cAAc,OACpCxB,KAAKK,QAAQI,KAAOf,EAAEG,OAAO,CAAEqB,OAAQ,EAAGG,KAAM,CAAC,GAAI,IAAKP,OAAQ,CAAED,EAAG,EAAGG,EAAG,IAAOhB,KAAKK,QAAQI,MACjGT,KAAKK,QAAQI,KAAKS,QAAUlB,KAAKK,QAAQC,SACzCN,KAAKK,QAAQI,KAAKE,QAAUF,EAC5BA,EAAKgB,IAAMzB,KAAKK,QAAQI,KAAKC,IAC7BD,EAAKiB,OAAS,IAAM1B,KAAK2B,SACzBlB,EAAKmB,QAAU,IAAM5B,KAAKK,QAAQI,KAAO,IAC1C,CAiBD,GAAIT,KAAKK,QAAQwB,MAAO,CACvB,IAAIjB,EAAKT,EAAEU,EAAGE,EAAKZ,EAAEa,EACrBjB,EAAIkB,OAEJlB,EAAI+B,KAAO9B,KAAKK,QAAQyB,MAAQ,4DAChC/B,EAAIgC,UAAY,SAChBhC,EAAIiC,aAAe,SACnBjC,EAAIkC,UAAYjC,KAAKK,QAAQ4B,WAAa,QAMtCjC,KAAKK,QAAQC,WAChBP,EAAIoB,UAAUhB,EAAEU,EAAGV,EAAEa,GACrBjB,EAAImB,OAAOlB,KAAKK,QAAQC,UACxBM,EAAK,EACLG,EAAK,GAIFf,KAAKkC,KAAKC,UAAY,KACzBpC,EAAIkC,UAAYjC,KAAKK,QAAQ+B,aAAe,SAG7CrC,EAAIsC,SAASrC,KAAKK,QAAQwB,MAAOjB,EAAIG,GAEjCf,KAAKK,QAAQ+B,aAAepC,KAAKkC,KAAKC,WAAa,KACtDpC,EAAIqC,YAAcpC,KAAKK,QAAQ+B,YAC/BrC,EAAIuC,WAAWtC,KAAKK,QAAQwB,MAAOjB,EAAIG,IAGxChB,EAAIuB,SACL,CACD,IAGD5B,EAAE6C,gBAAkB7C,EAAE8C,WAAW3C,OAAO,CACvCQ,QAAS,CACRoC,SAAU,cACVC,SAAU,CAAC,GAAI,IACfC,UAAW,CAAC,GAAI,IAChBC,SAAU,qPACV9B,OAAQ,IACR+B,QAAS,GACTC,aAAc,CAACC,EAAUC,EAAGlC,IAAWkC,EACvCD,UAAU,EACVE,WAAW,GAEZC,WAAY,SAAUC,EAAMC,EAAK/C,GAEhCL,KAAKqD,QAAU,CAAC,EAChBrD,KAAKsD,YAAc,CAAC,EAEpBjD,EAAUX,EAAE6D,WAAWvD,KAAMK,GAE7B,IAAImD,EAAeJ,EAAI/C,QAAQmD,aAC3BX,EAAUY,KAAKC,IAAIN,EAAIO,aAActD,EAAQwC,SAG5CW,GAAiBJ,EAAI/C,QAAQa,QACjC0C,QAAQC,KAAK,wCAId,IAAIC,EAAmC,mBAAnBX,EAAKY,WAA2BZ,EAAKY,aAAeZ,EAGxEW,EAASpE,EAAEsE,SAASC,OAAOH,GAAU,CAACA,GAAUA,EAEhDA,EAAOI,SAAQC,IAEd,IAAIC,EAAc1E,EAAE2E,aAAaC,mBAAmBH,GAChDI,EAASH,EAAYG,OAAS,EAAIH,EAAYA,EAAYG,OAAS,GAAK,EAI5E,IAAK,IAAIvB,EAAI,EAAGwB,EAAQf,KAAKgB,MAAMF,EAASlE,EAAQS,QAAS4D,EAAI,EAAG1B,GAAKwB,IAASxB,EAAG,CAEpF,IAAID,EAAW1C,EAAQS,OAASkC,EAGhC,KAAO0B,EAAIN,EAAYG,OAAS,GAAKH,EAAYM,GAAK3B,KAAY2B,EAGlE,IAAIC,EAAKR,EAAQO,EAAI,GACjBE,EAAKT,EAAQO,GACbG,EAASnF,EAAEoF,SAAS,CAACH,EAAIC,IAGzBG,GAAShC,EAAWqB,EAAYM,EAAI,KAAON,EAAYM,GAAKN,EAAYM,EAAI,IAC5EM,EAAWtF,EAAE2E,aAAaY,kBAAkB7B,EAAKyB,EAAQE,GACzDG,EAAQ9B,EAAI+B,QAAQP,GAAIQ,SAAShC,EAAI+B,QAAQR,IAC7CU,EAAQ5B,KAAK6B,MAAMJ,EAAMlE,EAAGkE,EAAMrE,GAGlC0E,EAAOlF,EAAQyC,aAAa0C,KAAKxF,KAAM+C,EAAUC,EAAG3C,EAAQS,QAG5D2E,EAAOzF,KAAK0F,yBAAyB1C,EAAGH,GACxC8C,EAAU3F,KAAKsD,YAAYmC,GAAQzF,KAAKsD,YAAYmC,IAAS/F,EAAEkG,aAG/DvF,EAAQ4C,YAAe5C,EAAQ0C,UAAYC,EAAI,GAAK,IAAO3C,EAAQ0C,YAClES,EACHmC,EAAQE,SACP,IAAInG,EAAEC,eAAegF,EAAI,CACxBpE,OAAQ,EACRE,KAAM,CACLC,IAAKL,EAAQuC,SACbvB,KAAMhB,EAAQsC,UACdzB,OAAQ,EACRJ,OAAQ,CAAED,EAAG,EAAGG,EAAG,IAEpBV,SAAU+E,EACVS,aAAa,KAQfH,EAAQE,SACPnG,EAAEqG,OAAOf,EAASgB,OAAQ,CACzBvF,KAAMf,EAAEe,KAAK,CACZwF,QAAS5F,EAAQuC,SACjBF,SAAUrC,EAAQsC,YAGnBrC,SAAU+E,EACVS,aAAa,MAObzF,EAAQ0C,UAAYC,EAAI,GAAK,IAC5BQ,EACHmC,EAAQE,SACP,IAAInG,EAAEC,eAAeqF,EAASgB,OAAQ,CACrCnE,MAAO0D,EACPhF,OAAQ,EACR2F,UAAW,OACXC,YAAa,EACblE,UAAW,QACXmE,MAAO,OACPC,OAAQ,EACRP,aAAa,KAIfH,EAAQE,SACPnG,EAAEqG,OAAOf,EAASgB,OAAQ,CACzBM,MAAOf,EACP9E,KAAMf,EAAE6G,QAAQ,CACfC,UAAWnG,EAAQoC,SACnBgE,KAAMlB,EACN7C,SAAUrC,EAAQqC,WAEnBoD,aAAa,KAKlB,KAGD,MAAMY,EAAyB,KAC9B,IAAIC,EAAU3G,KAAK4G,gBAAkB,EACjCC,EAAUzD,EAAIjB,UAClB,GAAI0E,EAAUF,EACb,IAAK,IAAI3D,EAAI2D,EAAU,EAAG3D,GAAK6D,IAAW7D,OACb8D,IAAxB9G,KAAKsD,YAAYN,IACpBhD,KAAK6F,SAAS7F,KAAKsD,YAAYN,SAG3B,GAAI6D,EAAUF,EACpB,IAAK,IAAI3D,EAAI2D,EAAS3D,EAAI6D,IAAW7D,OACR8D,IAAxB9G,KAAKsD,YAAYN,IACpBhD,KAAK+G,YAAY/G,KAAKsD,YAAYN,IAIrChD,KAAK4G,eAAiBC,GAEvBzD,EAAI4D,GAAG,UAAWN,GAClBA,GACD,EAEAhB,yBAA0B,SAAU1C,EAAGyC,GACtC,KAAOzC,EAAI,GAAKA,EAAI,GAAM,KACvByC,EACFzC,EAAIS,KAAKgB,MAAMzB,EAAI,GAEpB,OAAOyC,CACR,IAID/F,EAAEuH,SAASC,QAAQ,CAElBC,eAAgBzH,EAAEuH,SAASG,UAAUC,MACrCC,kBAAmB5H,EAAEuH,SAASG,UAAUG,SAExCC,mBAAoB,WACfxH,KAAKkC,MAAQlC,KAAKyH,kBACrBzH,KAAKkC,KAAK2D,SAAS7F,KAAKyH,iBAE1B,EAEAC,sBAAuB,WAClB1H,KAAKkC,MAAQlC,KAAKyH,kBACrBzH,KAAKkC,KAAK6E,YAAY/G,KAAKyH,iBAE7B,EAEAJ,MAAO,SAAUjE,GAChBpD,KAAKmH,eAAe/D,GAEpB,IAAIuE,EAAO3H,KAAKK,QAAQuH,iBAAmB,CAAC,EACxC5H,KAAKK,QAAQuH,kBAChB5H,KAAKyH,iBAAmBzH,KAAKyH,kBAAoB,IAAI/H,EAAE6C,gBAAgBvC,KAAMoD,EAAKuE,SAEjEb,IAAda,EAAKE,OAAoC,IAAdF,EAAKE,MACnC7H,KAAKwH,oBAEP,EAEAD,SAAU,SAAUnE,GACnBpD,KAAK0H,wBACL1H,KAAKsH,kBAAkBlE,EACxB,G","sources":["webpack://gpx-viewer/./node_modules/@raruto/leaflet-elevation/libs/leaflet-distance-marker.js"],"sourcesContent":["/*\r\n * Copyright (c) 2022, GPL-3.0+ Project, Raruto\r\n *\r\n *  This file is free software: you may copy, redistribute and/or modify it\r\n *  under the terms of the GNU General Public License as published by the\r\n *  Free Software Foundation, either version 2 of the License, or (at your\r\n *  option) any later version.\r\n *\r\n *  This file is distributed in the hope that it will be useful, but\r\n *  WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n *  General Public License for more details.\r\n *\r\n *  You should have received a copy of the GNU General Public License\r\n *  along with this program.  If not, see .\r\n *\r\n * This file incorporates work covered by the following copyright and\r\n * permission notice:\r\n * \r\n *     Copyright (c) 2014- Doroszlai Attila, 2016- Phil Whitehurst\r\n *\r\n *     Permission to use, copy, modify, and/or distribute this software\r\n *     for any purpose with or without fee is hereby granted, provided\r\n *     that the above copyright notice and this permission notice appear\r\n *     in all copies.\r\n *\r\n *     THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\r\n *     WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\r\n *     WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE\r\n *     AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR\r\n *     CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\r\n *     OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,\r\n *     NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\r\n *     CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n */\r\n\r\n// TODO: the \"L.DistanceMarker\" (canvas marker) class could be alternatively provided by \"leaflet-rotate\"? \r\n\r\nL.DistanceMarker = L.CircleMarker.extend({\r\n\t_updatePath: function () {\r\n\t\tlet ctx = this._renderer._ctx;\r\n\t\tlet p = this._point;\r\n\r\n\t\t// Calculate image direction (rotation)\r\n\t\tthis.options.rotation = this.options.rotation || 0;\r\n\r\n\t\t// Draw circle marker (canvas point)\r\n\t\tif (this.options.radius && this._renderer._updateCircle) {\r\n\t\t\tthis._renderer._updateCircle(this);\r\n\t\t}\r\n\r\n\t\t// Draw image over circle (distance marker)\r\n\t\tif (this.options.icon && this.options.icon.url) {\r\n\t\t\tif (!this.options.icon.element) {\r\n\t\t\t\tconst icon = document.createElement('img');\r\n\t\t\t\tthis.options.icon = L.extend({ rotate: 0, size: [40, 40], offset: { x: 0, y: 0 } }, this.options.icon);\r\n\t\t\t\tthis.options.icon.rotate += this.options.rotation;\r\n\t\t\t\tthis.options.icon.element = icon;\r\n\t\t\t\ticon.src = this.options.icon.url;\r\n\t\t\t\ticon.onload = () => this.redraw();\r\n\t\t\t\ticon.onerror = () => this.options.icon = null;\r\n\t\t\t} else {\r\n\t\t\t\tconst icon = this.options.icon;\r\n\t\t\t\tlet cx = p.x + icon.offset.x;\r\n\t\t\t\tlet cy = p.y + icon.offset.y;\r\n\t\t\t\tctx.save();\r\n\t\t\t\tif (icon.rotate) {\r\n\t\t\t\t\tctx.translate(p.x, p.y);\r\n\t\t\t\t\tctx.rotate(icon.rotate);\r\n\t\t\t\t\tcx = 0;\r\n\t\t\t\t\tcy = 0;\r\n\t\t\t\t}\r\n\t\t\t\tctx.drawImage(icon.element, cx - icon.size[0] / 2, cy - icon.size[1] / 2, icon.size[0], icon.size[1]);\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add a label inside the circle (distance marker)\r\n\t\tif (this.options.label) {\r\n\t\t\tlet cx = p.x, cy = p.y;\r\n\t\t\tctx.save();\r\n\r\n\t\t\tctx.font = this.options.font || 'normal 7pt \"Helvetica Neue\", Arial, Helvetica, sans-serif';\r\n\t\t\tctx.textAlign = \"center\";\r\n\t\t\tctx.textBaseline = \"middle\";\r\n\t\t\tctx.fillStyle = this.options.fillStyle || 'black';\r\n\r\n\t\t\t// TODO rescale circle to fit text\r\n\t\t\t// let fontSize  = Number(/[0-9\\.]+/.exec(ctx.font)[0]);\r\n\t\t\t// let fontWidth = ctx.measureText(this.options.html).width;\r\n\r\n\t\t\tif (this.options.rotation) {\r\n\t\t\t\tctx.translate(p.x, p.y);\r\n\t\t\t\tctx.rotate(this.options.rotation);\r\n\t\t\t\tcx = 0;\r\n\t\t\t\tcy = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Temporary fix to prevent stroke blurs at higher zoom levels\r\n\t\t\tif (this._map.getZoom() > 17) {\r\n\t\t\t\tctx.fillStyle = this.options.strokeStyle || 'black';\r\n\t\t\t}\r\n\r\n\t\t\tctx.fillText(this.options.label, cx, cy);\r\n\r\n\t\t\tif (this.options.strokeStyle && this._map.getZoom() <= 17) {\r\n\t\t\t\tctx.strokeStyle = this.options.strokeStyle;\r\n\t\t\t\tctx.strokeText(this.options.label, cx, cy);\r\n\t\t\t}\r\n\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n});\r\n\r\nL.DistanceMarkers = L.LayerGroup.extend({\r\n\toptions: {\r\n\t\tcssClass: 'dist-marker',\r\n\t\ticonSize: [12, 12],\r\n\t\tarrowSize: [10, 10],\r\n\t\tarrowUrl: \"data:image/svg+xml,%3Csvg transform='rotate(90)' xmlns='http://www.w3.org/2000/svg' width='560px' height='560px' viewBox='0 0 560 560'%3E%3Cpath stroke-width='35' fill='%23000' stroke='%23FFF' d='M280,40L522,525L280,420L38,525z'/%3E%3C/svg%3E\",\r\n\t\toffset: 1000,\r\n\t\tshowAll: 12,\r\n\t\ttextFunction: (distance, i, offset) => i,\r\n\t\tdistance: true,\r\n\t\tdirection: true,\r\n\t},\r\n\tinitialize: function (line, map, options) {\r\n\r\n\t\tthis._layers = {};\r\n\t\tthis._zoomLayers = {};\r\n\r\n\t\toptions = L.setOptions(this, options);\r\n\r\n\t\tlet preferCanvas = map.options.preferCanvas;\r\n\t\tlet showAll = Math.min(map.getMaxZoom(), options.showAll);\r\n\r\n\t\t// You should use \"leaflet-rotate\" to show rotated arrow markers (preferCanvas: false)\r\n\t\tif (!preferCanvas && !map.options.rotate) {\r\n\t\t\tconsole.warn('Missing dependency: \"leaflet-rotate\"');\r\n\t\t}\r\n\r\n\t\t// Get line coords as an array\r\n\t\tlet coords = typeof line.getLatLngs == 'function' ? line.getLatLngs() : line;\r\n\r\n\t\t// Handle \"MultiLineString\" features\r\n\t\tcoords = L.LineUtil.isFlat(coords) ? [coords] : coords;\r\n\r\n\t\tcoords.forEach(latlngs => {\r\n\t\t\t// Get accumulated line lengths as well as overall length\r\n\t\t\tlet accumulated = L.GeometryUtil.accumulatedLengths(latlngs);\r\n\t\t\tlet length = accumulated.length > 0 ? accumulated[accumulated.length - 1] : 0;\r\n\r\n\t\t\t// count = Number of distance markers to be added\r\n\t\t\t// j = Position in accumulated line length array\r\n\t\t\tfor (let i = 1, count = Math.floor(length / options.offset), j = 0; i <= count; ++i) {\r\n\r\n\t\t\t\tlet distance = options.offset * i;\r\n\r\n\t\t\t\t// Find the first accumulated distance that is greater than the distance of this marker\r\n\t\t\t\twhile (j < accumulated.length - 1 && accumulated[j] < distance) ++j;\r\n\r\n\t\t\t\t// Grab two nearest points either side marker position\r\n\t\t\t\tlet p1 = latlngs[j - 1];\r\n\t\t\t\tlet p2 = latlngs[j];\r\n\t\t\t\tlet m_line = L.polyline([p1, p2]);\r\n\r\n\t\t\t\t// and create a simple line to interpolate on\r\n\t\t\t\tlet ratio = (distance - accumulated[j - 1]) / (accumulated[j] - accumulated[j - 1]);\r\n\t\t\t\tlet position = L.GeometryUtil.interpolateOnLine(map, m_line, ratio);\r\n\t\t\t\tlet delta = map.project(p2).subtract(map.project(p1));\r\n\t\t\t\tlet angle = Math.atan2(delta.y, delta.x);\r\n\r\n\t\t\t\t// Generate distance marker label\r\n\t\t\t\tlet text = options.textFunction.call(this, distance, i, options.offset);\r\n\r\n\t\t\t\t// Grouping layer of visible layers at zoom level (arrow + distance)\r\n\t\t\t\tlet zoom = this._minimumZoomLevelForItem(i, showAll);\r\n\t\t\t\tlet markers = this._zoomLayers[zoom] = this._zoomLayers[zoom] || L.layerGroup()\r\n\r\n\t\t\t\t// create arrow markers\r\n\t\t\t\tif (options.direction && ((options.distance && i % 2 == 1) || !options.distance)) {\r\n\t\t\t\t\tif (preferCanvas) {\r\n\t\t\t\t\t\tmarkers.addLayer(\r\n\t\t\t\t\t\t\tnew L.DistanceMarker(p1, {\r\n\t\t\t\t\t\t\t\tradius: 0,\r\n\t\t\t\t\t\t\t\ticon: {\r\n\t\t\t\t\t\t\t\t\turl: options.arrowUrl,   //image link\r\n\t\t\t\t\t\t\t\t\tsize: options.arrowSize, //image size ( default [40, 40] )\r\n\t\t\t\t\t\t\t\t\trotate: 0,               //image base rotate ( default 0 )\r\n\t\t\t\t\t\t\t\t\toffset: { x: 0, y: 0 },  //image offset ( default { x: 0, y: 0 } )\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\trotation: angle,\r\n\t\t\t\t\t\t\t\tinteractive: false,\r\n\t\t\t\t\t\t\t\t// label: '⮞', //'➜',\r\n\t\t\t\t\t\t\t\t// font: 'normal 20pt \"Helvetica Neue\", Arial, Helvetica, sans-serif',\r\n\t\t\t\t\t\t\t\t// fillStyle: 'white',//'#3366CC',\r\n\t\t\t\t\t\t\t\t// strokeStyle: 'black',\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmarkers.addLayer(\r\n\t\t\t\t\t\t\tL.marker(position.latLng, {\r\n\t\t\t\t\t\t\t\ticon: L.icon({\r\n\t\t\t\t\t\t\t\t\ticonUrl: options.arrowUrl,\r\n\t\t\t\t\t\t\t\t\ticonSize: options.arrowSize,\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t// NB the following option is added by \"leaflet-rotate\"\r\n\t\t\t\t\t\t\t\trotation: angle,\r\n\t\t\t\t\t\t\t\tinteractive: false,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create distance markers\r\n\t\t\t\tif (options.distance && i % 2 == 0) {\r\n\t\t\t\t\tif (preferCanvas) {\r\n\t\t\t\t\t\tmarkers.addLayer(\r\n\t\t\t\t\t\t\tnew L.DistanceMarker(position.latLng, {\r\n\t\t\t\t\t\t\t\tlabel: text, // TODO: handle text rotation (leaflet-rotate)\r\n\t\t\t\t\t\t\t\tradius: 7,\r\n\t\t\t\t\t\t\t\tfillColor: '#fff',\r\n\t\t\t\t\t\t\t\tfillOpacity: 1,\r\n\t\t\t\t\t\t\t\tfillStyle: 'black',\r\n\t\t\t\t\t\t\t\tcolor: '#777',\r\n\t\t\t\t\t\t\t\tweight: 1,\r\n\t\t\t\t\t\t\t\tinteractive: false,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmarkers.addLayer(\r\n\t\t\t\t\t\t\tL.marker(position.latLng, {\r\n\t\t\t\t\t\t\t\ttitle: text,\r\n\t\t\t\t\t\t\t\ticon: L.divIcon({\r\n\t\t\t\t\t\t\t\t\tclassName: options.cssClass,\r\n\t\t\t\t\t\t\t\t\thtml: text,\r\n\t\t\t\t\t\t\t\t\ticonSize: options.iconSize\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tinteractive: false,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst updateMarkerVisibility = () => {\r\n\t\t\tlet oldZoom = this._lastZoomLevel || 0;\r\n\t\t\tlet newZoom = map.getZoom();\r\n\t\t\tif (newZoom > oldZoom) {\r\n\t\t\t\tfor (let i = oldZoom + 1; i <= newZoom; ++i) {\r\n\t\t\t\t\tif (this._zoomLayers[i] !== undefined) {\r\n\t\t\t\t\t\tthis.addLayer(this._zoomLayers[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (newZoom < oldZoom) {\r\n\t\t\t\tfor (let i = oldZoom; i > newZoom; --i) {\r\n\t\t\t\t\tif (this._zoomLayers[i] !== undefined) {\r\n\t\t\t\t\t\tthis.removeLayer(this._zoomLayers[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._lastZoomLevel = newZoom;\r\n\t\t};\r\n\t\tmap.on('zoomend', updateMarkerVisibility);\r\n\t\tupdateMarkerVisibility();\r\n\t},\r\n\r\n\t_minimumZoomLevelForItem: function (i, zoom) {\r\n\t\twhile (i > 0 && i % 2 === 0) {\r\n\t\t\t--zoom;\r\n\t\t\ti = Math.floor(i / 2);\r\n\t\t}\r\n\t\treturn zoom;\r\n\t},\r\n\r\n});\r\n\r\nL.Polyline.include({\r\n\r\n\t_originalOnAdd: L.Polyline.prototype.onAdd,\r\n\t_originalOnRemove: L.Polyline.prototype.onRemove,\r\n\r\n\taddDistanceMarkers: function () {\r\n\t\tif (this._map && this._distanceMarkers) {\r\n\t\t\tthis._map.addLayer(this._distanceMarkers);\r\n\t\t}\r\n\t},\r\n\r\n\tremoveDistanceMarkers: function () {\r\n\t\tif (this._map && this._distanceMarkers) {\r\n\t\t\tthis._map.removeLayer(this._distanceMarkers);\r\n\t\t}\r\n\t},\r\n\r\n\tonAdd: function (map) {\r\n\t\tthis._originalOnAdd(map);\r\n\r\n\t\tlet opts = this.options.distanceMarkers || {};\r\n\t\tif (this.options.distanceMarkers) {\r\n\t\t\tthis._distanceMarkers = this._distanceMarkers || new L.DistanceMarkers(this, map, opts);\r\n\t\t}\r\n\t\tif (opts.lazy === undefined || opts.lazy === false) {\r\n\t\t\tthis.addDistanceMarkers();\r\n\t\t}\r\n\t},\r\n\r\n\tonRemove: function (map) {\r\n\t\tthis.removeDistanceMarkers();\r\n\t\tthis._originalOnRemove(map);\r\n\t}\r\n\r\n});\r\n"],"names":["L","DistanceMarker","CircleMarker","extend","_updatePath","ctx","this","_renderer","_ctx","p","_point","options","rotation","radius","_updateCircle","icon","url","element","cx","x","offset","cy","y","save","rotate","translate","drawImage","size","restore","document","createElement","src","onload","redraw","onerror","label","font","textAlign","textBaseline","fillStyle","_map","getZoom","strokeStyle","fillText","strokeText","DistanceMarkers","LayerGroup","cssClass","iconSize","arrowSize","arrowUrl","showAll","textFunction","distance","i","direction","initialize","line","map","_layers","_zoomLayers","setOptions","preferCanvas","Math","min","getMaxZoom","console","warn","coords","getLatLngs","LineUtil","isFlat","forEach","latlngs","accumulated","GeometryUtil","accumulatedLengths","length","count","floor","j","p1","p2","m_line","polyline","ratio","position","interpolateOnLine","delta","project","subtract","angle","atan2","text","call","zoom","_minimumZoomLevelForItem","markers","layerGroup","addLayer","interactive","marker","latLng","iconUrl","fillColor","fillOpacity","color","weight","title","divIcon","className","html","updateMarkerVisibility","oldZoom","_lastZoomLevel","newZoom","undefined","removeLayer","on","Polyline","include","_originalOnAdd","prototype","onAdd","_originalOnRemove","onRemove","addDistanceMarkers","_distanceMarkers","removeDistanceMarkers","opts","distanceMarkers","lazy"],"sourceRoot":""}