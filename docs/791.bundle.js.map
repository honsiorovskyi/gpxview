{"version":3,"file":"791.bundle.js","mappings":"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","sources":["webpack://gpx-viewer/./node_modules/@raruto/leaflet-elevation/src/handlers/time.js"],"sourcesContent":["export function Time() {\n\n\tconst _ = L.Control.Elevation.Utils;\n\n\tlet opts = this.options;\n\tlet time = {};\n\n\ttime.label      = opts.timeLabel  || 't';\n\topts.timeFactor = opts.timeFactor || 3600;\n\n\t/**\n\t * Common AVG speeds:\n\t * ----------------------\n\t *  slow walk = 1.8  km/h\n\t *  walking   = 3.6  km/h <-- default: 3.6\n\t *  running   = 10.8 km/h\n\t *  cycling   = 18   km/h\n\t *  driving   = 72   km/h\n\t * ----------------------\n\t */\n\tthis._timeAVGSpeed = (opts.timeAVGSpeed || 3.6) * (opts.speedFactor || 1);\n\n\tif (!opts.timeFormat) {\n\t\topts.timeFormat = (time) => (new Date(time)).toLocaleString().replaceAll('/', '-').replaceAll(',', ' ');\n\t} else if (opts.timeFormat == 'time') {\n\t\topts.timeFormat = (time) => (new Date(time)).toLocaleTimeString();\n\t} else if (opts.timeFormat == 'date') {\n\t\topts.timeFormat = (time) => (new Date(time)).toLocaleDateString();\n\t}\n\n\topts.xTimeFormat = opts.xTimeFormat || ((t) => _.formatTime(t).split(\"'\")[0]);\n\n\treturn {\n\t\tname: 'time',\n\t\trequired: (this.options.speed || this.options.acceleration || this.options.timestamps),\n\t\tcoordinateProperties: [\"coordTimes\", \"times\", \"time\"],\n\t\tcoordPropsToMeta: _.parseDate,\n\t\tpointToAttr: function(point, i) {\n\t\t\t// Add missing timestamps (see: options.timeAVGSpeed)\n\t\t\tif (!point.meta || !point.meta.time) {\n\t\t\t\tpoint.meta = point.meta || {};\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tlet dx = (this._data[i].dist - this._data[i - 1].dist);\n\t\t\t\t\tlet t0 = this._data[i - 1].time.getTime();\n\t\t\t\t\tpoint.meta.time = new Date(t0 + ( dx / this._timeAVGSpeed) * this.options.timeFactor * 1000);\n\t\t\t\t} else {\n\t\t\t\t\tpoint.meta.time = new Date(Date.now())\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle timezone offset\n\t\t\tlet time = (point.meta.time.getTime() - point.meta.time.getTimezoneOffset() * 60 * 1000 !== 0) ? point.meta.time : 0;\n\t\t\t// Update duration\n\t\t\tthis._data[i].duration = i > 0 ? (this._data[i - 1].duration || 0) + Math.abs(time - this._data[i - 1].time) : 0;\n\t\t\treturn time;\n\t\t},\n\t\tonPointAdded: (_, i) => this.track_info.time = this._data[i].duration,\n\t\tscale: (opts.time && opts.time != \"summary\" && !L.Browser.mobile) && {\n\t\t\taxis       : \"x\",\n\t\t\tposition   : \"top\",\n\t\t\tscale      : {\n\t\t\t\tattr       : \"duration\",\n\t\t\t\tmin        : 0,\n\t\t\t},\n\t\t\tlabel      : time.label,\n\t\t\tlabelY     : -10,\n\t\t\tlabelX     : () => this._width(),\n\t\t\tname       : \"time\",\n\t\t\tticks      : () => _.clamp(this._chart._xTicks() / 2, [4, +Infinity]),\n\t\t\ttickFormat : (d)  => (d == 0 ? '' : opts.xTimeFormat(d)),\n\t\t\tonAxisMount: axis => {\n\t\t\t\taxis.select(\".domain\")\n\t\t\t\t\t.remove();\n\t\t\t\taxis.selectAll(\"text\")\n\t\t\t\t\t.attr('opacity', 0.65)\n\t\t\t\t\t.style('font-family', 'Monospace')\n\t\t\t\t\t.style('font-size', '110%');\n\t\t\t\taxis.selectAll(\".tick line\")\n\t\t\t\t\t.attr('y2', this._height())\n\t\t\t\t\t.attr('stroke-dasharray', 2)\n\t\t\t\t\t.attr('opacity', 0.75);\n\t\t\t\t}\n\t\t},\n\t\ttooltips: [\n\t\t\t(this.options.time) && {\n\t\t\t\tname: 'time',\n\t\t\t\tchart: (item) => L._(\"T: \") + _.formatTime(item.duration || 0),\n\t\t\t\torder: 20\n\t\t\t},\n\t\t\t(this.options.timestamps) && {\n\t\t\t\tname: 'date',\n\t\t\t\tchart: (item) => L._(\"t: \") + this.options.timeFormat(item.time),\n\t\t\t\torder: 21,\n\t\t\t}\n\t\t],\n\t\tsummary: (this.options.time) && {\n\t\t\t\"tottime\"  : {\n\t\t\t\tlabel: \"Total Time: \",\n\t\t\t\tvalue: (track) => _.formatTime(track.time || 0),\n\t\t\t\torder: 20\n\t\t\t}\n\t\t}\n\t};\n}"],"names":["Time","_","L","Control","Elevation","Utils","opts","this","options","time","label","timeLabel","timeFactor","_timeAVGSpeed","timeAVGSpeed","speedFactor","timeFormat","Date","toLocaleTimeString","toLocaleDateString","toLocaleString","replaceAll","xTimeFormat","t","formatTime","split","name","required","speed","acceleration","timestamps","coordinateProperties","coordPropsToMeta","parseDate","pointToAttr","point","i","meta","dx","_data","dist","t0","getTime","now","getTimezoneOffset","duration","Math","abs","onPointAdded","track_info","scale","Browser","mobile","axis","position","attr","min","labelY","labelX","_width","ticks","clamp","_chart","_xTicks","tickFormat","d","onAxisMount","select","remove","selectAll","style","_height","tooltips","chart","item","order","summary","value","track"],"sourceRoot":""}